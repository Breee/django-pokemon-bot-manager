# Generated by Django 2.0.4 on 2018-04-17 08:38

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('myapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GymMemberRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_cp', models.IntegerField(default=None, null=True)),
                ('current_stamina', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GymPokemon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('pokemon_uid', models.BigIntegerField(default=None, null=True)),
                ('base_cp', models.SmallIntegerField(default=None, null=True)),
                ('num_upgrades', models.SmallIntegerField(default=None, null=True)),
                ('height', models.FloatField(default=None, null=True)),
                ('weight', models.FloatField(default=None, null=True)),
                ('stamina', models.SmallIntegerField(default=None, null=True)),
                ('stamina_max', models.SmallIntegerField(default=None, null=True)),
                ('cp_multiplier', models.FloatField(default=None, null=True)),
                ('additional_cp_multiplier', models.FloatField(default=None, null=True)),
                ('iv_defense', models.SmallIntegerField(default=None, null=True)),
                ('iv_stamina', models.SmallIntegerField(default=None, null=True)),
                ('iv_attack', models.SmallIntegerField(default=None, null=True)),
                ('costume', models.SmallIntegerField(default=None, null=True)),
                ('form', models.SmallIntegerField(default=None, null=True)),
                ('shiny', models.SmallIntegerField(default=None, null=True)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='GymStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('current_team_id', models.IntegerField(default=0)),
                ('interactable', models.BooleanField(default=True)),
                ('occupied_since', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_cp', models.IntegerField(default=None, null=True)),
                ('slots_available', models.IntegerField(default=None, null=True)),
                ('lowest_pokemon_motivation', models.FloatField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PointOfInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('poi_id', models.TextField(default=None, null=True)),
                ('enabled', models.BooleanField(default=True)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('last_modified', models.DateTimeField(default=None, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('name', models.TextField(default=None, null=True)),
                ('description', models.TextField(default=None, null=True)),
                ('image_url', models.URLField(default=None, null=True)),
                ('type', models.TextField()),
                ('active_fort_modifier', models.SmallIntegerField(default=None, null=True)),
                ('park', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PokemonMove',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('damage', models.SmallIntegerField()),
                ('energy', models.SmallIntegerField()),
                ('dps', models.SmallIntegerField()),
                ('legacy', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PokemonSpawn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('disappear_time', models.DateTimeField(db_index=True)),
                ('individual_attack', models.SmallIntegerField(default=None, null=True)),
                ('individual_defense', models.SmallIntegerField(default=None, null=True)),
                ('individual_stamina', models.SmallIntegerField(default=None, null=True)),
                ('cp', models.SmallIntegerField(default=None, null=True)),
                ('cp_multiplier', models.FloatField(default=None, null=True)),
                ('weight', models.FloatField(default=None, null=True)),
                ('height', models.FloatField(default=None, null=True)),
                ('gender', models.SmallIntegerField(default=None, null=True)),
                ('costume', models.SmallIntegerField(default=None, null=True)),
                ('form', models.SmallIntegerField(default=None, null=True)),
                ('weather_boosted_condition', models.SmallIntegerField(default=None, null=True)),
                ('last_modified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, null=True)),
                ('level', models.IntegerField(default=None, null=True)),
                ('_individual_percentage', models.FloatField(default=None, null=True)),
                ('moves', models.ManyToManyField(default=None, to='myapp.PokemonMove')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('name_german', models.TextField(null=True)),
                ('color', models.CharField(max_length=6)),
                ('damage', models.ManyToManyField(related_name='_pokemontype_damage_+', to='myapp.PokemonType')),
            ],
        ),
        migrations.CreateModel(
            name='PokeStopLure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('expiration_time', models.DateTimeField()),
                ('point_of_interest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.PointOfInterest')),
            ],
        ),
        migrations.CreateModel(
            name='Raid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(db_index=True)),
                ('spawn', models.DateTimeField(db_index=True)),
                ('start', models.DateTimeField(db_index=True)),
                ('end', models.DateTimeField(db_index=True)),
                ('cp', models.IntegerField(default=None, null=True)),
                ('last_scanned', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('gym', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.PointOfInterest')),
                ('moves', models.ManyToManyField(default=None, to='myapp.PokemonMove')),
            ],
        ),
        migrations.RemoveField(
            model_name='pokeposition',
            name='poke_nr',
        ),
        migrations.AlterModelOptions(
            name='pokemon',
            options={'ordering': ('number',)},
        ),
        migrations.RenameField(
            model_name='pokemon',
            old_name='poke_nr',
            new_name='number',
        ),
        migrations.RemoveField(
            model_name='pokemon',
            name='poke_name_eng',
        ),
        migrations.RemoveField(
            model_name='pokemon',
            name='poke_name_ger',
        ),
        migrations.AddField(
            model_name='pokemon',
            name='capture_rate',
            field=models.FloatField(null=True),
        ),
        migrations.AddField(
            model_name='pokemon',
            name='egg_distance',
            field=models.IntegerField(null=True),
        ),
        migrations.AddField(
            model_name='pokemon',
            name='flee_rate',
            field=models.FloatField(null=True),
        ),
        migrations.AddField(
            model_name='pokemon',
            name='max_cp',
            field=models.IntegerField(null=True),
        ),
        migrations.AddField(
            model_name='pokemon',
            name='name_english',
            field=models.TextField(db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='pokemon',
            name='name_french',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='pokemon',
            name='name_german',
            field=models.TextField(db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='pokemon',
            name='rarity',
            field=models.TextField(default='normal', null=True),
        ),
        migrations.DeleteModel(
            name='PokePosition',
        ),
        migrations.AddField(
            model_name='raid',
            name='pokemon',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.Pokemon'),
        ),
        migrations.AddField(
            model_name='pokemonspawn',
            name='poke_nr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Pokemon'),
        ),
        migrations.AddField(
            model_name='pokemonmove',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.PokemonType'),
        ),
        migrations.AddField(
            model_name='gymstatus',
            name='guard_pokemon_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Pokemon'),
        ),
        migrations.AddField(
            model_name='gymstatus',
            name='gym_pokemon',
            field=models.ManyToManyField(through='myapp.GymMemberRelation', to='myapp.GymPokemon'),
        ),
        migrations.AddField(
            model_name='gympokemon',
            name='moves',
            field=models.ManyToManyField(default=None, to='myapp.PokemonMove'),
        ),
        migrations.AddField(
            model_name='gympokemon',
            name='pokemon_nr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Pokemon'),
        ),
        migrations.AddField(
            model_name='gymmemberrelation',
            name='gym_pokemon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.GymPokemon'),
        ),
        migrations.AddField(
            model_name='gymmemberrelation',
            name='gym_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.GymStatus'),
        ),
        migrations.AddField(
            model_name='pokemon',
            name='moves',
            field=models.ManyToManyField(to='myapp.PokemonMove'),
        ),
        migrations.AddField(
            model_name='pokemon',
            name='types',
            field=models.ManyToManyField(to='myapp.PokemonType'),
        ),
    ]
