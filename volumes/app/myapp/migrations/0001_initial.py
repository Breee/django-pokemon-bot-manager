# Generated by Django 2.1.5 on 2019-04-10 11:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllowedDiscordServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_id', models.CharField(db_index=True, max_length=128)),
                ('name', models.CharField(blank=True, default=None, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Common',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=32)),
                ('val', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'common',
            },
        ),
        migrations.CreateModel(
            name='Forts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=35, null=True, unique=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('sponsor', models.SmallIntegerField(blank=True, null=True)),
                ('weather_cell_id', models.BigIntegerField(blank=True, null=True)),
                ('park', models.CharField(blank=True, max_length=128, null=True)),
                ('parkid', models.BigIntegerField(blank=True, null=True)),
                ('edited_by', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'forts',
            },
        ),
        migrations.CreateModel(
            name='FortSightings',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('last_modified', models.IntegerField(blank=True, null=True)),
                ('team', models.PositiveIntegerField(blank=True, null=True)),
                ('guard_pokemon_id', models.SmallIntegerField(blank=True, null=True)),
                ('guard_pokemon_form', models.SmallIntegerField(blank=True, null=True)),
                ('slots_available', models.SmallIntegerField(blank=True, null=True)),
                ('is_in_battle', models.IntegerField(blank=True, null=True)),
                ('updated', models.IntegerField(blank=True, null=True)),
                ('is_ex_raid_eligible', models.IntegerField(blank=True, null=True)),
                ('fort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.Forts', unique=True)),
            ],
            options={
                'db_table': 'fort_sightings',
            },
        ),
        migrations.CreateModel(
            name='GymDefenders',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('external_id', models.BigIntegerField()),
                ('pokemon_id', models.SmallIntegerField(blank=True, null=True)),
                ('form', models.SmallIntegerField(blank=True, null=True)),
                ('team', models.PositiveIntegerField(blank=True, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=128, null=True)),
                ('nickname', models.CharField(blank=True, max_length=128, null=True)),
                ('cp', models.IntegerField(blank=True, null=True)),
                ('stamina', models.IntegerField(blank=True, null=True)),
                ('stamina_max', models.IntegerField(blank=True, null=True)),
                ('atk_iv', models.SmallIntegerField(blank=True, null=True)),
                ('def_iv', models.SmallIntegerField(blank=True, null=True)),
                ('sta_iv', models.SmallIntegerField(blank=True, null=True)),
                ('move_1', models.SmallIntegerField(blank=True, null=True)),
                ('move_2', models.SmallIntegerField(blank=True, null=True)),
                ('last_modified', models.IntegerField(blank=True, null=True)),
                ('battles_attacked', models.IntegerField(blank=True, null=True)),
                ('battles_defended', models.IntegerField(blank=True, null=True)),
                ('num_upgrades', models.SmallIntegerField(blank=True, null=True)),
                ('created', models.IntegerField(blank=True, null=True)),
                ('fort', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.Forts')),
            ],
            options={
                'db_table': 'gym_defenders',
            },
        ),
        migrations.CreateModel(
            name='IngressPortals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=35, null=True, unique=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('updated', models.BigIntegerField()),
                ('imported', models.BigIntegerField(blank=True, null=True)),
                ('checked', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ingress_portals',
            },
        ),
        migrations.CreateModel(
            name='MysterySightings',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pokemon_id', models.SmallIntegerField(blank=True, null=True)),
                ('spawn_id', models.BigIntegerField(blank=True, null=True)),
                ('encounter_id', models.BigIntegerField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('first_seen', models.IntegerField(blank=True, null=True)),
                ('first_seconds', models.SmallIntegerField(blank=True, null=True)),
                ('last_seconds', models.SmallIntegerField(blank=True, null=True)),
                ('seen_range', models.SmallIntegerField(blank=True, null=True)),
                ('atk_iv', models.PositiveIntegerField(blank=True, null=True)),
                ('def_iv', models.PositiveIntegerField(blank=True, null=True)),
                ('sta_iv', models.PositiveIntegerField(blank=True, null=True)),
                ('move_1', models.SmallIntegerField(blank=True, null=True)),
                ('move_2', models.SmallIntegerField(blank=True, null=True)),
                ('gender', models.SmallIntegerField(blank=True, null=True)),
                ('form', models.SmallIntegerField(blank=True, null=True)),
                ('cp', models.SmallIntegerField(blank=True, null=True)),
                ('level', models.SmallIntegerField(blank=True, null=True)),
                ('weather_boosted_condition', models.SmallIntegerField(blank=True, null=True)),
                ('weather_cell_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mystery_sightings',
            },
        ),
        migrations.CreateModel(
            name='Nests',
            fields=[
                ('nest_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('pokemon_id', models.IntegerField(blank=True, null=True)),
                ('updated', models.BigIntegerField(blank=True, null=True)),
                ('type', models.IntegerField()),
                ('nest_submitted_by', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'nests',
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selly_id', models.CharField(max_length=100)),
                ('product_id', models.IntegerField()),
                ('email', models.CharField(max_length=250)),
                ('value', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='Pokestops',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=35, null=True, unique=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('updated', models.IntegerField(blank=True, null=True)),
                ('quest_id', models.SmallIntegerField(blank=True, null=True)),
                ('reward_id', models.SmallIntegerField(blank=True, null=True)),
                ('deployer', models.CharField(blank=True, max_length=40, null=True)),
                ('lure_start', models.CharField(blank=True, max_length=40, null=True)),
                ('expires', models.IntegerField(blank=True, null=True)),
                ('quest_submitted_by', models.CharField(blank=True, max_length=200, null=True)),
                ('edited_by', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'pokestops',
            },
        ),
        migrations.CreateModel(
            name='Raids',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('level', models.PositiveIntegerField(blank=True, null=True)),
                ('pokemon_id', models.SmallIntegerField(blank=True, null=True)),
                ('move_1', models.SmallIntegerField(blank=True, null=True)),
                ('move_2', models.SmallIntegerField(blank=True, null=True)),
                ('time_spawn', models.IntegerField(blank=True, null=True)),
                ('time_battle', models.IntegerField(blank=True, null=True)),
                ('time_end', models.IntegerField(blank=True, null=True)),
                ('last_updated', models.IntegerField(blank=True, null=True)),
                ('cp', models.IntegerField(blank=True, null=True)),
                ('submitted_by', models.CharField(blank=True, max_length=200, null=True)),
                ('form', models.SmallIntegerField(blank=True, null=True)),
                ('is_exclusive', models.IntegerField(blank=True, null=True)),
                ('fort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.Forts')),
            ],
            options={
                'db_table': 'raids',
            },
        ),
        migrations.CreateModel(
            name='Sightings',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pokemon_id', models.SmallIntegerField(blank=True, null=True)),
                ('spawn_id', models.BigIntegerField(blank=True, null=True)),
                ('expire_timestamp', models.IntegerField(blank=True, null=True)),
                ('encounter_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('atk_iv', models.PositiveIntegerField(blank=True, null=True)),
                ('def_iv', models.PositiveIntegerField(blank=True, null=True)),
                ('sta_iv', models.PositiveIntegerField(blank=True, null=True)),
                ('move_1', models.SmallIntegerField(blank=True, null=True)),
                ('move_2', models.SmallIntegerField(blank=True, null=True)),
                ('gender', models.SmallIntegerField(blank=True, null=True)),
                ('form', models.SmallIntegerField(blank=True, null=True)),
                ('cp', models.SmallIntegerField(blank=True, null=True)),
                ('level', models.SmallIntegerField(blank=True, null=True)),
                ('updated', models.IntegerField(blank=True, null=True)),
                ('weather_boosted_condition', models.SmallIntegerField(blank=True, null=True)),
                ('weather_cell_id', models.BigIntegerField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('costume', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sightings',
            },
        ),
        migrations.CreateModel(
            name='SightingsTemp',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pokemon_id', models.SmallIntegerField(blank=True, null=True)),
                ('spawn_id', models.BigIntegerField(blank=True, null=True)),
                ('expire_timestamp', models.IntegerField(blank=True, null=True)),
                ('encounter_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('atk_iv', models.PositiveIntegerField(blank=True, null=True)),
                ('def_iv', models.PositiveIntegerField(blank=True, null=True)),
                ('sta_iv', models.PositiveIntegerField(blank=True, null=True)),
                ('move_1', models.SmallIntegerField(blank=True, null=True)),
                ('move_2', models.SmallIntegerField(blank=True, null=True)),
                ('gender', models.SmallIntegerField(blank=True, null=True)),
                ('form', models.SmallIntegerField(blank=True, null=True)),
                ('cp', models.SmallIntegerField(blank=True, null=True)),
                ('level', models.SmallIntegerField(blank=True, null=True)),
                ('updated', models.IntegerField(blank=True, null=True)),
                ('weather_boosted_condition', models.SmallIntegerField(blank=True, null=True)),
                ('weather_cell_id', models.BigIntegerField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sightings_temp',
            },
        ),
        migrations.CreateModel(
            name='Spawnpoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spawn_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('despawn_time', models.SmallIntegerField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('updated', models.IntegerField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('failures', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'spawnpoints',
            },
        ),
        migrations.CreateModel(
            name='Trshash',
            fields=[
                ('hashid', models.AutoField(primary_key=True, serialize=False)),
                ('hash', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=10)),
                ('id', models.CharField(max_length=255)),
                ('count', models.IntegerField()),
                ('modify', models.DateTimeField()),
            ],
            options={
                'db_table': 'trshash',
            },
        ),
        migrations.CreateModel(
            name='TrsQuest',
            fields=[
                ('guid', models.CharField(db_column='GUID', max_length=50, primary_key=True, serialize=False)),
                ('quest_type', models.IntegerField()),
                ('quest_timestamp', models.IntegerField()),
                ('quest_stardust', models.SmallIntegerField()),
                ('quest_pokemon_id', models.SmallIntegerField()),
                ('quest_reward_type', models.SmallIntegerField()),
                ('quest_item_id', models.SmallIntegerField()),
                ('quest_item_amount', models.IntegerField()),
                ('quest_target', models.IntegerField()),
                ('quest_condition', models.CharField(blank=True, max_length=500, null=True)),
                ('quest_reward', models.CharField(blank=True, max_length=1000, null=True)),
                ('quest_task', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'trs_quest',
            },
        ),
        migrations.CreateModel(
            name='TrsSpawn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spawnpoint', models.CharField(max_length=16, unique=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('spawndef', models.IntegerField()),
                ('earliest_unseen', models.IntegerField()),
                ('last_scanned', models.DateTimeField(blank=True, null=True)),
                ('first_detection', models.DateTimeField()),
                ('last_non_scanned', models.DateTimeField(blank=True, null=True)),
                ('calc_endminsec', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'trs_spawn',
            },
        ),
        migrations.CreateModel(
            name='TrsSpawnsightings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encounter_id', models.BigIntegerField()),
                ('spawnpoint_id', models.BigIntegerField()),
                ('scan_time', models.DateTimeField()),
                ('tth_secs', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trs_spawnsightings',
            },
        ),
        migrations.CreateModel(
            name='TrsStatus',
            fields=[
                ('origin', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('currentpos', models.CharField(blank=True, db_column='currentPos', max_length=50, null=True)),
                ('lastpos', models.CharField(blank=True, db_column='lastPos', max_length=50, null=True)),
                ('routepos', models.IntegerField(blank=True, db_column='routePos', null=True)),
                ('routemax', models.IntegerField(blank=True, db_column='routeMax', null=True)),
                ('routemanager', models.CharField(blank=True, max_length=255, null=True)),
                ('rebootcounter', models.IntegerField(blank=True, db_column='rebootCounter', null=True)),
                ('lastprotodatetime', models.CharField(blank=True, db_column='lastProtoDateTime', max_length=50, null=True)),
                ('lastpogorestart', models.CharField(blank=True, db_column='lastPogoRestart', max_length=50, null=True)),
                ('init', models.TextField(blank=True, null=True)),
                ('rebootingoption', models.TextField(blank=True, db_column='rebootingOption', null=True)),
                ('restartcounter', models.TextField(blank=True, db_column='restartCounter', null=True)),
                ('lastpogoreboot', models.CharField(blank=True, db_column='lastPogoReboot', max_length=50, null=True)),
                ('globalrebootcount', models.IntegerField(blank=True, null=True)),
                ('globalrestartcount', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trs_status',
            },
        ),
        migrations.CreateModel(
            name='TrsUsage',
            fields=[
                ('usage_id', models.AutoField(primary_key=True, serialize=False)),
                ('instance', models.CharField(blank=True, max_length=100, null=True)),
                ('cpu', models.FloatField(blank=True, null=True)),
                ('memory', models.FloatField(blank=True, null=True)),
                ('garbage', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trs_usage',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user', models.CharField(max_length=250)),
                ('password', models.CharField(blank=True, max_length=250, null=True)),
                ('temp_password', models.CharField(blank=True, max_length=250, null=True)),
                ('expire_timestamp', models.IntegerField()),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('login_system', models.CharField(max_length=40)),
                ('access_level', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s2_cell_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('condition', models.PositiveIntegerField(blank=True, null=True)),
                ('alert_severity', models.PositiveIntegerField(blank=True, null=True)),
                ('warn', models.IntegerField(blank=True, null=True)),
                ('day', models.PositiveIntegerField(blank=True, null=True)),
                ('updated', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'weather',
            },
        ),
        migrations.AlterUniqueTogether(
            name='mysterysightings',
            unique_together={('encounter_id', 'spawn_id')},
        ),
        migrations.AlterUniqueTogether(
            name='fortsightings',
            unique_together={('fort', 'last_modified')},
        ),
    ]
